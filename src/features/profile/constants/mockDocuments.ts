// mockDocuments.ts
import {
  DocumentStatus,
  DocumentRequirement,
  UploadedFile,
  Role,
} from "@/features/profile/types/documents";

// Mock database for each role
const mockDocumentsByRole: Record<Role, DocumentRequirement[]> = {
  INDIVIDUAL: [
    {
      id: "nationalIdFile",
      label: "National ID",
      mandatory: false,
      maxFiles: 1,
      maxFileSize: 5,
      acceptTypes: ["image/png", "image/jpeg", "application/pdf"],
      status: DocumentStatus.APPROVED,
      uploadedFiles: [],
    },
  ],

  ORGANIZATION: [
    {
      id: "commercialRegistrationFile",
      label: "Commercial Registration",
      mandatory: true,
      maxFiles: 1,
      maxFileSize: 10,
      acceptTypes: ["application/pdf"],
      status: DocumentStatus.PENDING,
      uploadedFiles: [
        {
          fileName: "cr.pdf",
          fileUrl: "/uploads/cr.pdf",
          uploadedAt: "2025-08-20T09:00:00Z",
          status: DocumentStatus.PENDING,
          id: "1",
        },
      ],
    },
  ],

  ENGINEERING_OFFICE: [
    {
      id: "saudiCouncilOfEngineersLicense",
      label: "Saudi Council of Engineers License",
      mandatory: true,
      maxFiles: 1,
      maxFileSize: 10,
      acceptTypes: ["application/pdf"],
      status: DocumentStatus.APPROVED,
      uploadedFiles: [
        {
          id: "1",
          status: DocumentStatus.APPROVED,
          fileName: "sce-license.pdf",
          fileUrl: "/uploads/sce-license.pdf",
          uploadedAt: "2025-08-15T12:00:00Z",
        },
      ],
    },
    {
      id: "commercialRegistration",
      label: "Commercial Registration",
      mandatory: false,
      maxFiles: 1,
      maxFileSize: 10,
      acceptTypes: ["application/pdf"],
    },
    {
      id: "nationalAddress",
      label: "National Address",
      mandatory: true,
      maxFiles: 1,
      maxFileSize: 5,
      acceptTypes: ["application/pdf"],
      status: DocumentStatus.PENDING,
    },
    {
      id: "bankAccountDetails",
      label: "Bank Account Details",
      mandatory: true,
      maxFiles: 1,
      maxFileSize: 5,
      acceptTypes: ["application/pdf"],
    },
    {
      id: "vatCertificate",
      label: "VAT Certificate",
      mandatory: true,
      maxFiles: 1,
      maxFileSize: 5,
      acceptTypes: ["application/pdf"],
      status: DocumentStatus.REJECTED,
      reviewComment: "The scan is blurry, please re-upload.",
    },
    {
      id: "previousWorkRecord",
      label: "Previous Work Record",
      mandatory: true,
      maxFiles: 1,
      maxFileSize: 15,
      acceptTypes: ["application/pdf"],
    },
    {
      id: "officialContactInformation",
      label: "Official Contact Information",
      mandatory: true,
      maxFiles: 1,
      maxFileSize: 5,
      acceptTypes: ["application/pdf"],
    },
    {
      id: "engineeringClassificationCertificate",
      label: "Engineering Classification Certificate",
      mandatory: false,
      maxFiles: 1,
      maxFileSize: 10,
      acceptTypes: ["application/pdf"],
    },
    {
      id: "qualityCertificates",
      label: "Quality Certificates",
      mandatory: false,
      maxFiles: 5,
      maxFileSize: 10,
      acceptTypes: ["application/pdf"],
    },
    {
      id: "chamberOfCommerceMembership",
      label: "Chamber of Commerce Membership",
      mandatory: false,
      maxFiles: 1,
      maxFileSize: 5,
      acceptTypes: ["application/pdf"],
    },
    {
      id: "zakatAndIncomeCertificate",
      label: "Zakat and Income Certificate",
      mandatory: false,
      maxFiles: 1,
      maxFileSize: 5,
      acceptTypes: ["application/pdf"],
    },
    {
      id: "companyProfile",
      label: "Company Profile",
      mandatory: false,
      maxFiles: 1,
      maxFileSize: 10,
      acceptTypes: ["application/pdf"],
    },
    {
      id: "organizationalStructure",
      label: "Organizational Structure",
      mandatory: false,
      maxFiles: 1,
      maxFileSize: 10,
      acceptTypes: ["application/pdf"],
    },
    {
      id: "additionalFiles",
      label: "Additional Files",
      mandatory: false,
      maxFiles: 10,
      maxFileSize: 20,
      acceptTypes: ["application/pdf", "image/png", "image/jpeg"],
    },
  ],

  FREELANCE_ENGINEER: [
    {
      id: "technicalCV",
      label: "Technical CV",
      mandatory: true,
      maxFiles: 1,
      maxFileSize: 5,
      acceptTypes: ["application/pdf"],
      status: DocumentStatus.EXPIRED,
    },
    {
      id: "personalPhoto",
      label: "Personal Photo",
      mandatory: true,
      maxFiles: 1,
      maxFileSize: 2,
      acceptTypes: ["image/png", "image/jpeg"],
    },
    {
      id: "saudiCouncilOfEngineersCardCopy",
      label: "Saudi Council of Engineers Card Copy",
      mandatory: true,
      maxFiles: 1,
      maxFileSize: 5,
      acceptTypes: ["application/pdf", "image/png", "image/jpeg"],
    },
    {
      id: "trainingCertificates",
      label: "Training Certificates",
      mandatory: false,
      maxFiles: 5,
      maxFileSize: 10,
      acceptTypes: ["application/pdf"],
    },
    {
      id: "professionalCertificates",
      label: "Professional Certificates",
      mandatory: false,
      maxFiles: 5,
      maxFileSize: 10,
      acceptTypes: ["application/pdf"],
    },
    {
      id: "personalProfile",
      label: "Personal Profile",
      mandatory: false,
      maxFiles: 1,
      maxFileSize: 5,
      acceptTypes: ["application/pdf"],
    },
    {
      id: "recommendationLetters",
      label: "Recommendation Letters",
      mandatory: false,
      maxFiles: 5,
      maxFileSize: 10,
      acceptTypes: ["application/pdf"],
    },
    {
      id: "workSamples",
      label: "Work Samples",
      mandatory: false,
      maxFiles: 10,
      maxFileSize: 20,
      acceptTypes: ["application/pdf", "image/png", "image/jpeg"],
    },
  ],

  SUPPLIER: [
    {
      id: "commercialRegistration",
      label: "Commercial Registration",
      mandatory: true,
      maxFiles: 1,
      maxFileSize: 10,
      acceptTypes: ["application/pdf"],
    },
    {
      id: "vatCertificate",
      label: "VAT Certificate",
      mandatory: false,
      maxFiles: 1,
      maxFileSize: 5,
      acceptTypes: ["application/pdf"],
    },
    {
      id: "nationalAddress",
      label: "National Address",
      mandatory: true,
      maxFiles: 1,
      maxFileSize: 5,
      acceptTypes: ["application/pdf"],
    },
    {
      id: "bankAccountDetails",
      label: "Bank Account Details",
      mandatory: true,
      maxFiles: 1,
      maxFileSize: 5,
      acceptTypes: ["application/pdf"],
    },
    {
      id: "accreditationCertificates",
      label: "Accreditation Certificates",
      mandatory: false,
      maxFiles: 5,
      maxFileSize: 10,
      acceptTypes: ["application/pdf"],
    },
    {
      id: "establishmentProfile",
      label: "Establishment Profile",
      mandatory: false,
      maxFiles: 1,
      maxFileSize: 10,
      acceptTypes: ["application/pdf"],
    },
    {
      id: "administrativeStructure",
      label: "Administrative Structure",
      mandatory: false,
      maxFiles: 1,
      maxFileSize: 10,
      acceptTypes: ["application/pdf"],
    },
    {
      id: "previousContracts",
      label: "Previous Contracts",
      mandatory: false,
      maxFiles: 5,
      maxFileSize: 20,
      acceptTypes: ["application/pdf"],
    },
    {
      id: "thankYouLetters",
      label: "Thank You Letters",
      mandatory: false,
      maxFiles: 5,
      maxFileSize: 10,
      acceptTypes: ["application/pdf"],
    },
    {
      id: "additionalCredibilityDocuments",
      label: "Additional Credibility Documents",
      mandatory: false,
      maxFiles: 10,
      maxFileSize: 20,
      acceptTypes: ["application/pdf"],
    },
  ],

  CONTRACTOR: [
    {
      id: "socialInsuranceCertificate",
      label: "Social Insurance Certificate",
      mandatory: true,
      maxFiles: 1,
      maxFileSize: 10,
      acceptTypes: ["application/pdf"],
      status: DocumentStatus.PENDING,
    },
    {
      id: "commercialRegistration",
      label: "Commercial Registration",
      mandatory: true,
      maxFiles: 1,
      maxFileSize: 10,
      acceptTypes: ["application/pdf"],
    },
    {
      id: "vatCertificate",
      label: "VAT Certificate",
      mandatory: true,
      maxFiles: 1,
      maxFileSize: 5,
      acceptTypes: ["application/pdf"],
    },
    {
      id: "nationalAddress",
      label: "National Address",
      mandatory: true,
      maxFiles: 1,
      maxFileSize: 5,
      acceptTypes: ["application/pdf"],
    },
    {
      id: "projectsAndPreviousWorkRecord",
      label: "Projects and Previous Work Record",
      mandatory: true,
      maxFiles: 5,
      maxFileSize: 20,
      acceptTypes: ["application/pdf"],
    },
    {
      id: "officialContactInformation",
      label: "Official Contact Information",
      mandatory: true,
      maxFiles: 1,
      maxFileSize: 5,
      acceptTypes: ["application/pdf"],
    },
    {
      id: "bankAccountDetails",
      label: "Bank Account Details",
      mandatory: true,
      maxFiles: 1,
      maxFileSize: 5,
      acceptTypes: ["application/pdf"],
    },
    {
      id: "chamberOfCommerceMembership",
      label: "Chamber of Commerce Membership",
      mandatory: false,
      maxFiles: 1,
      maxFileSize: 5,
      acceptTypes: ["application/pdf"],
    },
    {
      id: "companyProfile",
      label: "Company Profile",
      mandatory: false,
      maxFiles: 1,
      maxFileSize: 10,
      acceptTypes: ["application/pdf"],
    },
    {
      id: "organizationalStructure",
      label: "Organizational Structure",
      mandatory: false,
      maxFiles: 1,
      maxFileSize: 10,
      acceptTypes: ["application/pdf"],
    },
    {
      id: "qualityCertificates",
      label: "Quality Certificates",
      mandatory: false,
      maxFiles: 5,
      maxFileSize: 10,
      acceptTypes: ["application/pdf"],
    },
    {
      id: "otherFiles",
      label: "Other Files",
      mandatory: false,
      maxFiles: 10,
      maxFileSize: 20,
      acceptTypes: ["application/pdf", "image/png", "image/jpeg"],
    },
  ],
};

// Mock API
export const getDocumentsByRole = async (
  role: Role
): Promise<DocumentRequirement[]> => {
  return new Promise((resolve) => {
    setTimeout(() => {
      resolve(mockDocumentsByRole[role] || []);
    }, 500); // simulate network delay
  });
};
